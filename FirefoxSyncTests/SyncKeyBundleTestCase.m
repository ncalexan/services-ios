// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at http://mozilla.org/MPL/2.0/


#import <XCTest/XCTest.h>
#import "SyncUtils.h"
#import "SyncKeyBundle.h"


@interface SyncKeyBundleTestCase : XCTestCase

@end


@implementation SyncKeyBundleTestCase

- (void) testKeyBundleFromEncodedRecoveryKey
{
    SyncKeyBundle *keyBundle = [[SyncKeyBundle alloc] initWithEncodedRecoveryKey: @"TODO" username: @"TODO"];
    XCTAssertNotNil(keyBundle);

	const unsigned char expectedEncryptionKey[32] = {
        0x40, 0x7d, 0x3e, 0x7b, 0x52, 0xb9, 0x0e, 0x8a, 0x51, 0x27, 0xfe, 0x42, 0xab, 0xa1, 0x84, 0xcd,
        0xcf, 0x13, 0x19, 0xcf, 0xc6, 0xc6, 0x36, 0x6e, 0xfd, 0xc9, 0xdd, 0x52, 0xec, 0x6f, 0xea, 0xf2
	};

	const unsigned char expectedValidationKey[32] = {
        0xee, 0xc3, 0x3b, 0x6d, 0x9b, 0xa3, 0xac, 0x4c, 0xcb, 0x7a, 0x64, 0x43, 0x78, 0x8b, 0xc0, 0xd3,
        0xac, 0x23, 0x5f, 0x0b, 0x93, 0x57, 0xf8, 0xb1, 0xd4, 0x1f, 0x2b, 0x27, 0x59, 0xb0, 0xe3, 0xd2
	};

    XCTAssertEqualObjects(
        keyBundle.encryptionKey,
        [NSData dataWithBytes: expectedEncryptionKey length: sizeof expectedEncryptionKey]
    );

    XCTAssertEqualObjects(
        keyBundle.validationKey,
        [NSData dataWithBytes: expectedValidationKey length: sizeof expectedValidationKey]
    );
}

- (void) testKeyBundleFromFirefoxAccountKey
{
    unsigned char key[] = {
        0xd0, 0x2d, 0x8f, 0xe3, 0x9f, 0x28, 0xb6, 0x01, 0x15, 0x9c, 0x54, 0x3f, 0x2d, 0xee, 0xb8, 0xf7,
        0x2b, 0xdf, 0x20, 0x43, 0xe8, 0x27, 0x9a, 0xa0, 0x84, 0x96, 0xfb, 0xd9, 0xeb, 0xae, 0xa3, 0x61
    };

    SyncKeyBundle *keyBundle = [[SyncKeyBundle alloc] initWithKey: [NSData dataWithBytes: key length: sizeof key]];
    XCTAssertNotNil(keyBundle);
    
    unsigned char expectedEncryptionKey[] = {
        0xae, 0xc2, 0xf0, 0x10, 0x29, 0x20, 0x3d, 0x87, 0x86, 0x6d, 0x89, 0x7d, 0xd9, 0xed, 0xb7, 0x16,
        0xc9, 0x1f, 0x21, 0xb8, 0x25, 0x77, 0xd4, 0xe0, 0x7a, 0x27, 0xc4, 0x68, 0x1f, 0x59, 0xc1, 0x32
    };
    
    XCTAssertEqualObjects(
        keyBundle.encryptionKey,
        [NSData dataWithBytes: expectedEncryptionKey length: sizeof expectedEncryptionKey]
    );


    unsigned char expectedValidationKey[] = {
        0x7e, 0xce, 0xf9, 0x12, 0xc7, 0x82, 0x0f, 0xf5, 0x4e, 0x2e, 0x87, 0x65, 0x20, 0x69, 0xb0, 0x35,
        0xa6, 0xc1, 0x8e, 0x14, 0xd8, 0x04, 0x71, 0x42, 0x7b, 0xb0, 0x86, 0x21, 0xfd, 0x2d, 0xf1, 0x3c
    };

    XCTAssertEqualObjects(
        keyBundle.validationKey,
        [NSData dataWithBytes: expectedValidationKey length: sizeof expectedValidationKey]
    );
}

@end
